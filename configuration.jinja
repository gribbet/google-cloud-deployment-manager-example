{% set region = properties["zone"][:properties["zone"].rfind("-")] %}

resources:
- name: {{ env["deployment"] }}-instance-template
  type: compute.v1.instanceTemplate
  properties:
    properties:
      zone: {{ properties["zone"] }}
      machineType: f1-micro
      metadata:
        items:
          - key: google-container-manifest
            value: | 
              apiVersion: v1
              kind: Pod
              metadata:
                name: simple-echo
              spec:
                containers:
                  - name: simple-echo
                    image: gcr.io/google-containers/busybox
                    command: ['nc', '-p', '8080', '-l', '-l', '-e', 'echo', "HTTP/1.0 200 OK\r\n\r\nHey!"]
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 8080
                        hostPort: 80
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: projects/google-containers/global/images/family/container-vm
      networkInterfaces:
      - network: $(ref.{{ env["deployment"] }}-network.selfLink)
        accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT

- name: {{ env["deployment"] }}-instance-group
  type: compute.v1.instanceGroupManager
  properties:
    zone: {{ properties["zone"] }}
    targetSize: 1
    targetPools: 
      - $(ref.{{ env["deployment"] }}-target-pool.selfLink)
    baseInstanceName: instance
    instanceTemplate: $(ref.{{ env["deployment"] }}-instance-template.selfLink)

- name: {{ env["deployment"] }}-auto-scaler
  type: compute.v1.autoscaler
  properties:
    zone: {{ properties['zone'] }}
    target: $(ref.{{ env["deployment"] }}-instance-group.selfLink)
    autoscalingPolicy:
      minNumReplicas: 1
      maxNumReplicas: 4

- name: {{ env["deployment"] }}-health-check
  type: compute.v1.httpHealthCheck
  properties:
    port: 80
    requestPath: /

- name: {{ env["deployment"] }}-target-pool
  type: compute.v1.targetPool
  properties:
    region: {{ region }}
    healthChecks:
      - $(ref.{{ env["deployment"] }}-health-check.selfLink)

- name: {{ env["deployment"] }}-forwarding-rule
  type: compute.v1.forwardingRule
  properties:
    region: {{ region }}
    portRange: 80
    target: $(ref.{{ env["deployment"] }}-target-pool.selfLink)

- name: {{ env["deployment"] }}-network
  type: compute.v1.network
  properties:
    IPv4Range: 10.0.0.1/16

- name: {{ env["deployment"] }}-firewall
  type: compute.v1.firewall
  properties:
    network: $(ref.{{ env["deployment"] }}-network.selfLink)
    sourceRanges: ["0.0.0.0/0"]
    allowed:
    - IPProtocol: TCP
      ports: ["80"]